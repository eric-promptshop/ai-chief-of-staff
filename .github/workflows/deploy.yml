name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
      - name: Run tests
        run: |
          cd backend && python -m pytest
      # Add your deployment steps here, e.g., deploying to a cloud provider
      # This is a placeholder for actual deployment
      - name: Deploy to production
        run: |
          echo "Deploying backend to production..."
          # Add actual deployment commands here
        # Example for deploying to Heroku
        # uses: akhileshns/heroku-deploy@v3.12.12
        # with:
        #   heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        #   heroku_app_name: "your-app-name"
        #   heroku_email: "your-email@example.com"
        #   appdir: "backend"

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Build project
        run: |
          cd frontend
          npm run build
      # Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod' 